[build-system]
build-backend = "hatchling.build"

requires = [ "hatchling" ]

[project]
name = "graphiti-core"
version = "0.11.6"
description = "A temporal graph building library"
readme = "README.md"
license = "Apache-2.0"
authors = [
  { "name" = "Paul Paliychuk", "email" = "paul@getzep.com" },
  { "name" = "Preston Rasmussen", "email" = "preston@getzep.com" },
  { "name" = "Daniel Chalef", "email" = "daniel@getzep.com" },
]
requires-python = ">=3.10,<4"
classifiers = [
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
dependencies = [
  "diskcache>=5.6.3",
  "kuzu>=0.10",
  "litellm>=1.70",
  "neo4j>=5.23",
  "numpy>=1",
  "openai>=1.53",
  "pydantic>=2.8.2",
  "python-dotenv>=1.0.1",
  "tenacity>=9",
]

optional-dependencies.anthropic = [ "anthropic>=0.49" ]
optional-dependencies.google-genai = [ "google-genai>=1.8" ]
optional-dependencies.groq = [ "groq>=0.2" ]
optional-dependencies.neo4j = [
  "neo4j>=5.23",
]
urls.Homepage = "https://help.getzep.com/graphiti/graphiti/overview"
urls.Repository = "https://github.com/getzep/graphiti"
packages = [ { include = "graphiti_core", from = "." } ]

[dependency-groups]
dev = [
  "anthropic>=0.49",
  "diskcache-stubs>=5.6.3.6.20240818",
  "google-genai>=1.8",
  "groq>=0.2",
  "ipykernel>=6.29.5",
  "jupyterlab>=4.2.4",
  "langchain-anthropic>=0.2.4",
  "langchain-openai>=0.2.6",
  "langgraph>=0.2.15",
  "langsmith>=0.1.108",
  "mypy>=1.11.1",
  "pytest>=8.3.3",
  "pytest-asyncio>=0.24",
  "pytest-xdist>=3.6.1",
  "ruff>=0.7.1",
  "sentence-transformers>=3.2.1",
  "transformers>=4.45.2",
  "voyageai>=0.2.3",
]

[tool.ruff]
line-length = 100

format.indent-style = "space"
format.quote-style = "single"
format.docstring-code-format = true
lint.select = [
  # flake8-bugbear
  "B",
  # pycodestyle
  "E",
  # Pyflakes
  "F",
  # isort
  "I",
  # flake8-simplify
  "SIM",
  # pyupgrade
  "UP",
]
lint.ignore = [ "E501" ]

[tool.pytest.ini_options]
pythonpath = [ "." ]

[tool.uv.sources]
graph-service = { workspace = true }
graphiti-core = { workspace = true }
mcp-server = { workspace = true }

[tool.uv.workspace]
members = [
  ".",
  "server",
  "mcp_server",
]
